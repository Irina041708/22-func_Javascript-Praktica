// Задание 1. Получение данных о пользователе.

// Реализуйте функцию getUserData, которая принимает идентификатор 
// пользователя (ID) в качестве аргумента и использует fetch для получения 
// данных о пользователе с заданным ID с удаленного сервера. Функция должна 
// возвращать промис, который разрешается с данными о пользователе в виде объекта. 
// Если пользователь с указанным ID не найден, промис должен быть отклонен с 
// соответствующим сообщением об ошибке.

// Подсказка, с последовательностью действий:
// getUserData использует fetch для получения данных о пользователе с удаленного 
// сервера. Если запрос успешен (с кодом 200), функция извлекает данные из ответа с 
// помощью response.json() и возвращает объект с данными о пользователе. Если запрос 
// неуспешен, функция отклоняет промис с сообщением об ошибке.

// Работа должна быть выполнена с API: https://reqres.in/
// -----------------------
// https://reqres.in/api-docs/
// -----------------------
// 1. Если используете await, то then уже не стоит использовать.
// return await resp.json()
// .then(res => res.data);
// лучше записать:

// const result = await resp.json();
// return result.data;
// В 30 строке не будет response, fetch не кидает ошибку, если
//  у нас статус был не двухсотый, ошибка будет, если мы вовсе не сможем сделать запрос.
// 2. Отлично сделали, в 50 строке тоже стоит от then избавиться.
// -------------

async function getUserData(id) {
    try {
        const resp = await fetch(`https://reqres.in/api/users/${id}`);
        if (resp.ok) {
            const result = await resp.json();
            return result.data;
            // return await resp.json()
            // .then(res => res.data);
        }
    } catch (error) {
        console.log(`${error}`);
    }
}
console.log(getUserData(2));
